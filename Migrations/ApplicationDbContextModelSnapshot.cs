// <auto-generated />
using System;
using FlareTech.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlareTech.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("BasePersonSequence");

            modelBuilder.Entity("FlareTech.Models.AuditTrail", b =>
                {
                    b.Property<int>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditId"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditId");

                    b.HasIndex("AdminId");

                    b.ToTable("AuditTrails");
                });

            modelBuilder.Entity("FlareTech.Models.BasePerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [BasePersonSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BasePerson");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("FlareTech.Models.Feature", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeatureId"));

                    b.Property<decimal>("AdditionalCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeatureId");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            FeatureId = 1,
                            AdditionalCost = 15.00m,
                            Description = "Connect and use your own domain name with our platform",
                            FeatureName = "Custom Domain Integration"
                        },
                        new
                        {
                            FeatureId = 2,
                            AdditionalCost = 25.00m,
                            Description = "Detailed insights and reporting with custom dashboards",
                            FeatureName = "Advanced Analytics"
                        },
                        new
                        {
                            FeatureId = 3,
                            AdditionalCost = 50.00m,
                            Description = "24/7 dedicated support with 2-hour response time guarantee",
                            FeatureName = "Priority Support"
                        },
                        new
                        {
                            FeatureId = 4,
                            AdditionalCost = 30.00m,
                            Description = "Full REST API access with comprehensive documentation",
                            FeatureName = "API Access"
                        },
                        new
                        {
                            FeatureId = 5,
                            AdditionalCost = 20.00m,
                            Description = "Daily automated backups with 30-day retention",
                            FeatureName = "Automated Backups"
                        },
                        new
                        {
                            FeatureId = 6,
                            AdditionalCost = 10.00m,
                            Description = "Multiple user accounts with role-based access control",
                            FeatureName = "Team Collaboration"
                        },
                        new
                        {
                            FeatureId = 7,
                            AdditionalCost = 40.00m,
                            Description = "Remove our branding and use your own",
                            FeatureName = "White Labeling"
                        },
                        new
                        {
                            FeatureId = 8,
                            AdditionalCost = 35.00m,
                            Description = "Enhanced security features including 2FA and IP whitelisting",
                            FeatureName = "Advanced Security"
                        },
                        new
                        {
                            FeatureId = 9,
                            AdditionalCost = 45.00m,
                            Description = "Create custom automated workflows and triggers",
                            FeatureName = "Workflow Automation"
                        },
                        new
                        {
                            FeatureId = 10,
                            AdditionalCost = 25.00m,
                            Description = "Connect with popular third-party services and tools",
                            FeatureName = "Premium Integrations"
                        });
                });

            modelBuilder.Entity("FlareTech.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("FlareTech.Models.Plan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<decimal>("BasePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlanId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("FlareTech.Models.PlanFeature", b =>
                {
                    b.Property<int>("PlanFeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanFeatureId"));

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<bool>("IsIncluded")
                        .HasColumnType("bit");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.HasKey("PlanFeatureId");

                    b.HasIndex("FeatureId");

                    b.HasIndex("PlanId", "FeatureId")
                        .IsUnique();

                    b.ToTable("PlanFeatures");
                });

            modelBuilder.Entity("FlareTech.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MonthlyFee")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PlanId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("FlareTech.Models.Admin", b =>
                {
                    b.HasBaseType("FlareTech.Models.BasePerson");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("FlareTech.Models.Customer", b =>
                {
                    b.HasBaseType("FlareTech.Models.BasePerson");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FlareTech.Models.AuditTrail", b =>
                {
                    b.HasOne("FlareTech.Models.Admin", "Admin")
                        .WithMany("AuditTrails")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("FlareTech.Models.Invoice", b =>
                {
                    b.HasOne("FlareTech.Models.Subscription", "Subscription")
                        .WithMany("Invoices")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("FlareTech.Models.PlanFeature", b =>
                {
                    b.HasOne("FlareTech.Models.Feature", "Feature")
                        .WithMany("PlanFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlareTech.Models.Plan", "Plan")
                        .WithMany("PlanFeatures")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("FlareTech.Models.Subscription", b =>
                {
                    b.HasOne("FlareTech.Models.Customer", "Customer")
                        .WithMany("Subscriptions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FlareTech.Models.Plan", "Plan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("FlareTech.Models.Feature", b =>
                {
                    b.Navigation("PlanFeatures");
                });

            modelBuilder.Entity("FlareTech.Models.Plan", b =>
                {
                    b.Navigation("PlanFeatures");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("FlareTech.Models.Subscription", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("FlareTech.Models.Admin", b =>
                {
                    b.Navigation("AuditTrails");
                });

            modelBuilder.Entity("FlareTech.Models.Customer", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
